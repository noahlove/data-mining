[["index.html", "Data Mining Chapter 1 A Brief Introduction", " Data Mining Noah Love 2021-02-23 Chapter 1 A Brief Introduction "],["the-pool-of-tears.html", "Chapter 2 The pool of tears", " Chapter 2 The pool of tears "],["a-caucus-race-and-a-long-tale.html", "Chapter 3 A caucus-race and a long tale", " Chapter 3 A caucus-race and a long tale "],["principal-component-analysis.html", "Chapter 4 Principal Component Analysis 4.1 Principle Component Analysis 4.2 Typical machine learning approach 4.3 What we would do in data mining", " Chapter 4 Principal Component Analysis 4.1 Principle Component Analysis hidden_p &lt;- 5 observ_p &lt;- 30 prob &lt;- NULL # runif(hidden_p) h2o &lt;- sample(hidden_p, #hidden to observed observ_p, replace=TRUE, prob=prob) h2o &lt;- sort(h2o) sample_size &lt;- 1000 hidden_z &lt;- sapply( seq_len(hidden_p), function(x) rnorm(sample_size)) corrs &lt;- runif(observ_p, 0.3, 0.8) #create five groups of colinear stuff observ_x &lt;- mapply( function(i, corr) { hidden_z[, i] * corr + rnorm(sample_size) * (1 - corr) *100 }, h2o, corrs) #observ_x is what you often see, but there is still hidden stuff image(cor(observ_x)) #This looks weird to what we expect. It doesn&#39;t look like five groups #if we sort instead it works h2o &lt;- sample(hidden_p, #hidden to observed observ_p, replace=TRUE, prob=prob) sample_size &lt;- 1000 hidden_z &lt;- sapply( seq_len(hidden_p), function(x) rnorm(sample_size)) #This effects how things are correlated! corrs &lt;- runif(observ_p, 0.3, 0.8) #create five groups of colinear stuff observ_x &lt;- mapply( function(i, corr) { hidden_z[, i] * corr + rnorm(sample_size) * (1 - corr) }, h2o, corrs) #observ_x is what you often see, but there is still hidden stuff image(cor(observ_x)) beta &lt;- runif(hidden_p, -10, 10) noise &lt;- rnorm(sample_size, sd=10) #hard to measure hidden forces! #we can only measure x, but x is only correlated to hidden stuff y &lt;- hidden_z %*% beta + noise df &lt;- data.frame(y, observ_x) #y depends on the hidden stuff not x Maybe there is a hidden gene inside of you that makes you sick. We canâ€™t (yet) measure that hidden gene. But we can measure symptoms and things like your heart rate. This should be correlated. 4.2 Typical machine learning approach #training data set, first 800 points (80 percent) train &lt;- 1:800 ols &lt;- lm(y ~ ., df, subset=train) length(ols$residual) #correct length ## [1] 800 #predict on points we didn&#39;t use to train ols_pred &lt;- predict(ols, df[-train,]) #error: differrence between measured values against predict. Mean of this squared MSE! mean((df$y[-train] - ols_pred)^2) ## [1] 108.9647 #run ols #PCA TIME #only input X, (feature matrix) into the PCA function pr_out &lt;- prcomp(observ_x, scale=FALSE) #scale is used because Xs might not be in the same unit, so mean = 0, sd = 1 class(pr_out) ## [1] &quot;prcomp&quot; #it has its own class names(pr_out) ## [1] &quot;sdev&quot; &quot;rotation&quot; &quot;center&quot; &quot;scale&quot; &quot;x&quot; #squared value of sdev is eigenvalue eigen_val &lt;- pr_out$sdev^2 #cumulative sum as a fraction of total eigenvalues plot(cumsum(eigen_val) / sum(eigen_val)) abline(h=.9) #here after the 5th point, the slope tapers off! This is directly related to the hidden_p value at the beginning. It should help show you how many important hidden features there are. #it is the percent of variabilitiy caputured by the first k components #If you don&#39;t know what to choose, 90% variability is a good point plot(pr_out$sdev) #Very similar, but not as interpretable as percent of variability. #These steps is how k is chosen. #K is the dimension of W. Data came n x p. We need to shrink it to k. If you don&#39;t have #a clear cut, use 90% #we don&#39;t want to keep all the variability because not all features provide useful #information. Some of them are so colinear, they just add noise. cutoff &lt;- 5 #now we are looking at x #only pull out first k columns dim(pr_out$x) ## [1] 1000 30 dim(observ_x) ## [1] 1000 30 #these will be the same, but we choose a cutoff. W &lt;- pr_out$x[, 1:cutoff] df_w &lt;- data.frame(y, W) #PCA doesn&#39;t have to be lm. It could be ridge or lasso too #should be like the ols from above pca &lt;- lm(y ~ ., df_w, subset=train) #same prediction pca_pred &lt;- predict(pca, df_w[-train,]) #prediction error mean((df_w$y[-train] - pca_pred)^2) ## [1] 111.6873 #that was the classic view of PCA 4.3 What we would do in data mining k &lt;- 3 plot(pr_out$rotation[,k]) abline(h = 0) which(abs(pr_out$rotation[, k]) &gt; 0.2) ## [1] 3 7 8 9 14 15 21 22 24 25 28 30 #what is the truth we should be comparing to? pr_out &lt;- prcomp(observ_x) test_x &lt;- scale(observ_x, scale = FALSE) %*% pr_out$rotation pr_out$x ## PC1 PC2 PC3 ## [1,] 0.833391540 0.301271529 0.2632664689 ## [2,] -0.944470799 -1.476182743 0.7975674093 ## [3,] -1.479023799 -2.013349238 -1.6006794607 ## [4,] -0.266478002 0.143474651 -0.2367797097 ## [5,] -1.190428134 3.177101835 0.0878852136 ## [6,] -1.084490105 1.501776666 -0.1203200669 ## [7,] -3.430731260 1.302585147 0.1464447284 ## [8,] 0.741358714 1.481917252 2.5634978487 ## [9,] -1.260894533 -0.581409723 1.9077973637 ## [10,] -0.962393694 -1.290011535 2.5285512183 ## [11,] -0.786420844 -0.913717615 2.1718580502 ## [12,] 1.243162729 0.343437931 -1.2599795845 ## [13,] 0.324892131 -0.406183179 1.3647427499 ## [14,] -0.982340223 1.001048731 0.9676127509 ## [15,] -1.467831879 -0.671583857 1.6775654398 ## [16,] -1.635235817 -1.555649434 -0.6336963824 ## [17,] -0.450242332 -0.956107247 0.3555563161 ## [18,] 1.644048043 -1.946108700 -2.0558013877 ## [19,] 1.827628560 1.026821950 2.2210460778 ## [20,] 1.286271842 -2.045958269 -1.3589723828 ## [21,] -0.190177412 0.029801590 0.2586088056 ## [22,] -0.857189767 -0.400465871 0.0183314033 ## [23,] -0.658752925 1.860427888 -0.0422839674 ## [24,] -1.889913098 -0.353650354 -0.7072352516 ## [25,] 2.104338615 -0.767229917 -1.8859628506 ## [26,] -0.005334260 -0.182108550 0.6233235920 ## [27,] -1.436519057 1.001155271 -0.8752130716 ## [28,] -3.893810158 -1.332967565 0.9005595034 ## [29,] -1.131465938 1.741930992 -2.3337650943 ## [30,] 1.287181897 -1.757531670 -1.6382473671 ## [31,] 0.422403135 3.431112942 -4.2616680428 ## [32,] -0.042394486 0.708908920 -1.6253286851 ## [33,] -0.099976063 -2.969119563 1.1970919131 ## PC4 PC5 PC6 ## [1,] -4.9449641894 -0.164490514 0.9016826280 ## [2,] -1.0858993921 -0.132812640 -0.4051700300 ## [3,] -0.8062222462 -0.740065420 0.3837741180 ## [4,] 1.1662727347 0.447637318 0.0323576289 ## [5,] -2.3518450166 -0.793101242 -0.8632356281 ## [6,] -0.1163975487 -1.771415104 -1.7213857467 ## [7,] 0.2338013564 0.050907839 -0.2041688390 ## [8,] -0.2862774461 -0.097443318 0.2034499145 ## [9,] 2.1933848527 -1.822602568 0.4189718702 ## [10,] -1.2859836412 -1.288177803 1.2182215894 ## [11,] -0.5020825076 -2.821303416 1.0477282150 ## [12,] -0.4859076698 -0.754111915 0.1585728433 ## [13,] -0.3614550613 1.308421908 0.6903851101 ## [14,] 0.2476851741 1.399865958 -0.1534692311 ## [15,] 2.0012333194 -0.376488560 0.6432224926 ## [16,] 0.4996742634 0.557061275 0.1864708005 ## [17,] -1.7118770036 -1.977276492 -0.2565467749 ## [18,] -2.1019314588 2.428622946 -0.1335804291 ## [19,] 2.7981303851 -1.220131636 -1.0001213190 ## [20,] 0.9478042954 -1.532037227 -0.8201066828 ## [21,] 0.9472163823 -2.088620627 1.2903245043 ## [22,] 1.3286910821 -2.329488144 0.4392347707 ## [23,] 0.7894541139 -0.087596366 1.1092156368 ## [24,] 1.6607304976 -2.341980193 0.7860597968 ## [25,] -1.0275340636 0.189278513 0.1437796891 ## [26,] -2.8887850515 -0.760289708 -0.9221602260 ## [27,] 0.5569835717 -0.527208144 0.6360312599 ## [28,] 0.1266979919 -0.455649632 0.7089279205 ## [29,] 0.7160340593 1.438748453 0.2102311561 ## [30,] 0.8139530353 0.551028448 -0.2736462222 ## [31,] -1.4393311717 -0.401981880 -0.1577620018 ## [32,] 0.9717611561 0.091147809 -0.3145484586 ## [33,] -1.2013859225 1.287414635 0.9899131681 ## PC7 PC8 PC9 ## [1,] 0.9228566901 -0.7849112314 -0.526824168 ## [2,] -0.0683689088 -1.0212161359 -0.133972411 ## [3,] -0.4313410364 0.1236612712 0.311994580 ## [4,] 0.7501869231 -0.6640041768 -0.765701638 ## [5,] -0.5678130969 -0.2701017593 -0.067707848 ## [6,] 0.4342577304 -0.3035482962 0.382316838 ## [7,] -0.5549666161 1.2017035013 -0.079257334 ## [8,] 0.1484911204 0.0790292354 -0.511711873 ## [9,] -1.0076805901 0.9213969759 -0.040251000 ## [10,] 0.3192129314 -0.2976137414 -0.322969555 ## [11,] -0.4099483446 0.6236329072 -0.436865135 ## [12,] -0.0225856539 -0.3602610027 -0.464334948 ## [13,] 0.2323138797 0.1935019077 0.798092041 ## [14,] -0.4033511748 0.0688268421 -0.156309970 ## [15,] -0.4351260080 0.1726591175 0.363351257 ## [16,] 0.1342588712 0.1964493097 -0.498054931 ## [17,] 0.5915630638 0.7474970718 -0.893721029 ## [18,] 0.2943916280 -0.7954858163 0.076871316 ## [19,] -0.0466593231 -0.5535532088 0.630452076 ## [20,] -0.4118724409 0.0658692019 -0.164958243 ## [21,] 0.5689675381 -0.3008790865 -0.275515908 ## [22,] 0.6585275315 0.2410216927 -0.208136926 ## [23,] 1.4722144581 -0.0741598008 -0.035141950 ## [24,] -1.1149739095 0.2769378907 0.404630016 ## [25,] 0.6240314013 1.3007169324 -1.005597864 ## [26,] 0.9507625053 -0.1467069091 0.196977899 ## [27,] 0.0299438000 0.1464368872 -0.343298823 ## [28,] -0.1968538520 0.3689363772 0.524120201 ## [29,] -0.2581164692 -0.4748850046 1.170360459 ## [30,] -1.3586275846 -0.2469952385 -0.097956653 ## [31,] 0.5865810297 0.1808537037 0.394833424 ## [32,] -0.1959745087 0.1482112993 0.534992956 ## [33,] 0.2158359430 0.1018620680 -0.059620387 ## PC10 PC11 PC12 ## [1,] 0.6528176404 0.0621880491 -0.2509221930 ## [2,] 0.4196083953 -0.2938260095 -0.4471333934 ## [3,] -0.5220370508 -0.1962283249 -1.0919922756 ## [4,] -0.2091272268 0.5329054209 -0.1434655099 ## [5,] 0.7198649454 -0.7062630761 0.4763412619 ## [6,] 0.2177830828 0.1937716241 0.1839418980 ## [7,] -0.1527357217 -0.1942742033 -0.8207286763 ## [8,] -0.4457387778 0.0805088291 0.5196878545 ## [9,] 0.8387258499 -0.8734765171 -0.0922310830 ## [10,] -0.0158236180 0.0454423948 -0.7268039366 ## [11,] 0.3953911879 -0.5733725862 -0.3334337830 ## [12,] -0.2376582974 -0.3550864522 0.4006119829 ## [13,] 0.4835275022 -0.1346941495 -0.2981925884 ## [14,] 0.5676797485 0.0696174816 -0.7417896249 ## [15,] -0.3488432232 0.2871737029 -0.6705616903 ## [16,] -0.9842394475 -0.0291743637 -0.2973993232 ## [17,] 0.2287687863 0.3813264845 -0.1530484429 ## [18,] -0.0306607108 -0.7995817919 -0.7655055123 ## [19,] -0.1527941224 0.2990711965 -0.3507406829 ## [20,] 0.2709898969 1.2231987095 -0.0510225945 ## [21,] 0.7217391215 0.1159173192 -0.2407498636 ## [22,] -0.6889490202 -0.2073958280 0.5384034751 ## [23,] 0.1676033926 -0.9383448918 -0.0040169319 ## [24,] -0.0675892145 -0.9720453555 -0.3954688947 ## [25,] -0.0285686518 0.1148866000 -0.3837056139 ## [26,] -0.6315094132 0.3868066169 -0.2226802253 ## [27,] -0.0220898278 0.2647034235 -0.6360129079 ## [28,] 0.1443098046 -0.3588600137 -0.2742389526 ## [29,] -0.2933526477 0.1371352046 0.3721366820 ## [30,] 0.2221111027 0.6084980981 0.8293265659 ## [31,] 0.4472725676 -0.1763169687 0.4628848386 ## [32,] -0.0514450555 0.8760928307 -0.4801247983 ## [33,] 0.8169041839 1.3622090869 0.1731320269 ## PC13 PC14 PC15 ## [1,] -0.0139004494 -0.4077402859 -0.056920573 ## [2,] -0.7009676562 -0.2336080973 -0.389850162 ## [3,] 0.6322762323 -0.0008346196 -0.380321807 ## [4,] -0.0958506714 0.5268728475 0.293451434 ## [5,] 0.3733986161 0.3759499656 -0.688247672 ## [6,] 0.0808482207 0.1771482632 -0.317991286 ## [7,] -0.3346474121 0.9496287192 -0.713783941 ## [8,] -0.0620027268 -0.0987837958 -0.163642911 ## [9,] 0.0787432745 -0.8640320807 0.104295251 ## [10,] -0.2229894467 -0.4821078495 0.597308818 ## [11,] 1.1793904534 -0.3720998480 0.088132309 ## [12,] 0.4221823499 -0.6030159312 -0.259693485 ## [13,] -0.4912804440 0.3927297466 0.444971182 ## [14,] 0.1242029113 0.7607380603 -0.334268118 ## [15,] 0.3598597076 0.6647353276 0.160372319 ## [16,] -0.6801943037 -0.7320357736 -0.282325233 ## [17,] 0.2713840395 -0.5494062715 -0.333655562 ## [18,] 0.1899896022 0.1443560948 -0.250768873 ## [19,] 0.2800874038 -0.4412709343 -1.101955176 ## [20,] -0.0542874534 0.2109016516 0.523033724 ## [21,] -0.4589127980 -0.5879199006 -0.840752352 ## [22,] 0.1306524067 0.1642594392 0.069907842 ## [23,] -0.0815173251 0.5528184226 -0.431669660 ## [24,] -0.5740105343 -0.4610742511 -0.218690413 ## [25,] -0.9195876011 -0.1230367467 -0.207726780 ## [26,] -0.0615804275 -0.9632141286 1.228217823 ## [27,] 0.2184250341 -1.1745875362 -0.815330329 ## [28,] -0.1036467495 -0.2163310284 -0.499037984 ## [29,] 0.8203234574 0.0696552944 -0.501284067 ## [30,] -0.4325108507 -0.4500585724 -0.281014017 ## [31,] -0.1133932653 0.0011254499 0.031129688 ## [32,] 0.4188443037 0.1560836277 -0.176806227 ## [33,] -0.7057687324 -0.1591439709 0.087299212 ## PC16 PC17 PC18 ## [1,] 0.6043258807 0.0115532441 0.0875123940 ## [2,] -0.1026836164 0.2464334994 0.0017353197 ## [3,] -0.1099931436 0.2622344637 0.6411596520 ## [4,] 0.6134567629 -0.4691181197 0.1031574301 ## [5,] -0.2314266764 -0.0850960033 0.4387133527 ## [6,] -0.1111494119 0.0871284901 0.5628109573 ## [7,] 0.2587319425 -0.1212680174 -0.1217374077 ## [8,] 0.0045278475 0.8214099624 0.0021313673 ## [9,] 0.5018899727 -0.6403133856 -0.3520343201 ## [10,] -0.5944736680 0.2596495794 0.4879541422 ## [11,] -0.3131408642 -0.0831143872 -0.4971568299 ## [12,] 0.3742158074 0.1382919936 -0.0637411262 ## [13,] -0.1024632991 0.2456806999 0.6369606870 ## [14,] 0.5052919656 -0.8559230115 -0.4979825334 ## [15,] 0.1770168482 0.0820269886 -0.0197959820 ## [16,] -0.6437482378 -0.1122383550 -1.2594914743 ## [17,] 0.6069239742 0.1029512299 -0.3349240881 ## [18,] -0.4687775397 0.4075554073 0.5258184173 ## [19,] 0.2859579711 -0.3530844043 -0.1419601695 ## [20,] -0.5371204310 0.3453430195 -0.5489496887 ## [21,] 0.3209417486 -0.9584137445 -0.4228550811 ## [22,] 1.1708489293 0.2057706829 -0.1997026192 ## [23,] 0.5230687401 -0.1087646568 0.2359349939 ## [24,] 0.8571591563 -0.3984249428 0.1286329181 ## [25,] 0.3711728985 0.3877844344 0.8159274324 ## [26,] -0.1803591631 -0.0031158433 0.3344903876 ## [27,] -0.2092785323 0.2170126583 -0.3268621552 ## [28,] -0.0301288461 0.7458398647 0.4686596036 ## [29,] -0.0208216468 0.3542185233 0.2622842590 ## [30,] -0.0917013424 0.6139454197 0.0476324474 ## [31,] -0.2978830181 -0.3337325278 -0.0945877352 ## [32,] -0.4443630394 0.6942203690 -0.4772850977 ## [33,] -0.1191735875 -0.9525401147 -0.5202532303 ## PC19 PC20 PC21 ## [1,] -0.4646968422 -0.0977148803 -0.1885201912 ## [2,] 0.7588830063 0.0185839382 0.1790497339 ## [3,] 0.0785593446 0.1085951009 -0.3549789997 ## [4,] 0.6779284663 0.1174888640 -0.2961228475 ## [5,] -0.0490315512 0.4817148535 0.0442664313 ## [6,] -0.4895700284 0.2086412044 -0.4279397259 ## [7,] -0.4956156082 -0.1409644469 0.0602818462 ## [8,] 0.1353157578 -0.1604465219 -0.0623506059 ## [9,] 1.0123706173 0.2193689186 -0.6946775178 ## [10,] 0.4603688508 -0.5889682293 -0.0496378150 ## [11,] 0.4538005243 0.1060738598 0.2055519466 ## [12,] 0.0398929417 0.2253711381 -0.0010646546 ## [13,] -1.5125333762 -0.4798112249 0.3711309934 ## [14,] -0.3801132144 -0.6265556867 -0.2085844739 ## [15,] -0.1476343139 0.3975653746 -0.0759910211 ## [16,] 0.0539908527 -0.6713144648 -0.4961844143 ## [17,] -0.2838266161 0.1331464216 0.6240937501 ## [18,] -0.0368942904 -0.3690793072 0.2732360599 ## [19,] -0.2834222482 -0.0095968058 -0.2591458560 ## [20,] 0.8471496387 -0.1383459914 0.1633274083 ## [21,] 0.3530474236 0.0542126961 -0.1243305230 ## [22,] -0.4865429578 -0.2294361140 1.4580465971 ## [23,] 0.2746155017 0.8578980400 -0.0543529515 ## [24,] -0.2053555794 0.2995866465 -0.0482414990 ## [25,] 0.2329412095 0.9849488388 0.2475158720 ## [26,] -0.7425339272 0.3825198390 0.1990967579 ## [27,] 0.5506548995 0.4118467058 0.2059209219 ## [28,] -0.3393430030 0.1101510808 0.5103520815 ## [29,] 0.3375103357 -0.1085613673 0.4380653898 ## [30,] 0.3920100863 0.2388679101 0.4325930870 ## [31,] 0.0684199427 -0.1445078899 -0.4366816444 ## [32,] -0.8553789501 0.0425517655 -0.2874126730 ## [33,] -0.0690761985 0.6449913135 0.0692267701 ## PC22 PC23 PC24 ## [1,] 0.2606752351 5.117866e-01 0.4255111508 ## [2,] -0.3464208085 -7.783657e-02 -0.1855884373 ## [3,] -0.1985000867 -1.060028e-02 0.1186780422 ## [4,] -0.2780383631 5.510501e-01 0.0815998178 ## [5,] -0.9405938525 -7.580540e-01 -0.1240092998 ## [6,] -0.4030948080 -4.650036e-01 -0.3881844879 ## [7,] 0.4051377401 -2.758828e-01 0.1862657166 ## [8,] 0.0956447749 -4.638298e-01 -0.1320150552 ## [9,] 0.2298396891 -3.046036e-01 0.1667873768 ## [10,] 0.0172030086 -5.613598e-01 0.1496903153 ## [11,] -0.2037306601 -2.548238e-01 -0.2144570331 ## [12,] 0.6186556251 -2.544970e-02 0.0164832755 ## [13,] -0.1733956314 3.458353e-02 -0.2020362855 ## [14,] 0.3277566171 -3.366747e-01 0.5932048448 ## [15,] -0.3415356262 -6.475144e-01 -0.3256733849 ## [16,] 0.0056405386 8.434929e-02 -0.4155555414 ## [17,] -0.3336973567 3.598982e-02 0.5403975443 ## [18,] -0.0681032515 -2.609029e-02 -0.0841554544 ## [19,] -0.2180835750 2.182869e-01 0.4568384384 ## [20,] -0.0883690063 -2.044407e-01 -0.0391527390 ## [21,] 0.4271886725 3.741307e-01 0.0371662376 ## [22,] 0.0567592899 -1.698041e-01 -0.3091949183 ## [23,] 0.1692791676 3.656501e-01 -0.1200687277 ## [24,] -0.0042122865 -5.619589e-02 0.4232511227 ## [25,] 0.4965968276 -5.981924e-02 0.5413506733 ## [26,] 0.2668140707 -3.865956e-01 -0.0871281722 ## [27,] -0.0144927532 -2.810771e-01 0.2104175725 ## [28,] 0.0466821483 3.147344e-01 0.3335832550 ## [29,] -0.6102934433 4.552291e-02 -0.1088491257 ## [30,] 0.2532996494 8.325211e-01 0.0596210829 ## [31,] -0.0172554742 -7.005283e-01 0.5796072951 ## [32,] -0.0420318462 -1.197469e-02 -0.4992490084 ## [33,] 0.1231450532 -6.235590e-01 -0.2718126114 ## PC25 PC26 PC27 ## [1,] -0.0297544330 -0.2494997309 -0.0660487820 ## [2,] 0.5465566837 -0.1707853806 0.0573566903 ## [3,] -0.0617930500 -0.1301081465 0.4297077245 ## [4,] -0.1191967616 -0.1820854644 -0.2966159478 ## [5,] -0.1810888517 0.1579789914 0.2032319188 ## [6,] 0.0161829373 -0.0768789147 -0.1890021908 ## [7,] 0.5714387918 -0.1733062229 -0.0135630608 ## [8,] 0.0435116883 0.0968825105 0.0361239857 ## [9,] 0.0795342203 -0.2179337724 -0.0280519085 ## [10,] 0.1192276874 -0.6402848133 -0.1684208166 ## [11,] 0.4830177768 0.2585860400 0.1656443355 ## [12,] 0.8012807891 0.2764115164 -0.0221185185 ## [13,] 0.4212458810 -0.2586205455 -0.2318259309 ## [14,] -0.3160926172 0.2930306564 0.0315799416 ## [15,] -0.1863365985 -0.0106280740 -0.2821539717 ## [16,] -0.5021864973 0.1920284657 -0.2274141335 ## [17,] -0.1431597249 0.3997201177 -0.0481033605 ## [18,] -0.1770219381 -0.0665569356 0.3611532806 ## [19,] -0.4169195525 0.1342212706 -0.1372401736 ## [20,] 0.0401363558 0.1926622172 0.0901537503 ## [21,] 0.4277447025 0.0615161369 -0.5712587282 ## [22,] -0.3148804972 0.1372520660 0.0813089600 ## [23,] 0.4222957104 -0.3285194628 0.0925493967 ## [24,] -0.2469079001 -0.1974959151 -0.1257202039 ## [25,] -0.1700714274 0.1883536696 -0.6113643473 ## [26,] 0.0260953422 -0.2776142922 0.1594554647 ## [27,] -0.2412035180 -0.3407585999 0.0642962322 ## [28,] 0.2889218019 0.1731209602 0.2412316168 ## [29,] -0.3192036244 0.2061276212 0.2905124131 ## [30,] 0.0623945908 -0.3518014887 0.0860232071 ## [31,] -0.0502156945 -0.2301011210 -0.4474894087 ## [32,] -0.1045515163 0.1329058267 -0.4092126816 ## [33,] -0.0074496906 -0.0462915914 -0.0091735374 ## PC28 PC29 PC30 ## [1,] -4.118784e-02 0.0747913749 0.4824541648 ## [2,] -4.450928e-02 0.1983488012 -0.0545452485 ## [3,] -2.422789e-01 0.2087064801 0.1651653817 ## [4,] 5.477311e-01 0.1225076615 0.1905709717 ## [5,] 1.724511e-01 0.3212178360 0.1311337837 ## [6,] -1.626544e-01 -0.0594342160 0.2477111876 ## [7,] -1.523922e-01 0.2926424287 0.2982726047 ## [8,] 1.369472e-01 -0.1427530912 -0.1959000225 ## [9,] -2.533642e-02 0.3949850490 -0.1945260720 ## [10,] -3.973926e-01 -0.3076664673 -0.0210214185 ## [11,] -2.863127e-01 0.4407351869 -0.0776859478 ## [12,] 1.415949e-01 -0.2224286186 0.0245826893 ## [13,] 9.189767e-01 -0.0138663130 -0.0456332642 ## [14,] 3.207570e-01 0.1774287922 0.2360938849 ## [15,] 1.064913e-01 -0.4176901841 0.0675202318 ## [16,] -2.531840e-01 0.0852493813 -0.1806827976 ## [17,] 1.712961e-01 -0.3375000161 -0.0445632157 ## [18,] 4.451967e-01 -0.2118792243 -0.0037483797 ## [19,] 1.068379e-01 -0.2590978522 0.0811362419 ## [20,] -1.068990e-01 0.4073914144 -0.4432467479 ## [21,] -7.029166e-02 0.0144854178 -0.3870033072 ## [22,] 2.737751e-01 -0.0489928919 -0.1968142932 ## [23,] -3.534494e-01 -0.1772094803 0.3869563742 ## [24,] 2.899841e-01 0.1532929393 -0.3171594078 ## [25,] -1.516290e-01 -0.2421432154 0.2478355450 ## [26,] -1.832428e-01 -0.3649506163 0.2064930727 ## [27,] -1.536383e-01 0.3335648898 0.5298153002 ## [28,] 7.837078e-01 -0.6522152431 -0.0404608610 ## [29,] 9.871805e-02 -0.2904237923 -0.2512475428 ## [30,] -1.717537e-01 -0.1907410987 0.1455593674 ## [31,] -4.223503e-01 -0.1099567737 0.2398531608 ## [32,] -2.482441e-01 -0.0756558644 -0.1624747868 ## [33,] -7.481628e-02 -0.0057854465 -0.1883130058 ## [ reached getOption(&quot;max.print&quot;) -- omitted 967 rows ] #Now looking at rotation head(observ_x, 1 ) %*% pr_out$rotation[,1] ## [,1] ## [1,] 0.8534236 #k is which column are we going to examine j &lt;- 2 plot(pr_out$rotation[, j]) abline(h = 0) which(abs(pr_out$rotation[, j]) &gt; 0.2) ## [1] 4 6 11 12 23 27 # what is the truth we should be comparing to? #What is rotation. Matrix (30 x 30 in this case) dim(pr_out$rotation) ## [1] 30 30 #it is actually p x p rather than p x k to give you more columns head(pr_out$rotation[,k]) ## [1] 0.01219156 0.04262736 0.33938644 -0.03719539 ## [5] 0.03446081 -0.01993286 #kth eigenvector which correspods with the kth largest value (most significant) value #this will always be 1. Property of rotation matrix sum(pr_out$rotation[,k]^2) ## [1] 1 "],["principal-component-analysis-applied.html", "Chapter 5 Principal Component Analysis Applied! 5.1 Citation data", " Chapter 5 Principal Component Analysis Applied! 5.1 Citation data 5.1.1 Other example In really poor countries it is super hard to measure wealth and income. There are no reciepts and corresponding taxes. People donâ€™t have bank accounts. Instead, you measure features. Like do you have a fridge. Do you have cooking equipment? How many kids? How many room in your house? So you could run PCA on assets matrix. You can find correlations. If you have more rooms in your house, you likely have more education. The correlations will be baked into the principal driving component. Further, they use this as the Y to see if they can predict! But that is beyond the scope of this class. library(jsonlite) citations &lt;- read.csv(&quot;Datasets/j_cunningham_citation.csv&quot;, head = FALSE) titles &lt;- read_json(&quot;Datasets/j_cunningham_citation_titles.json&quot;) #Explore the data dim(citations) ## [1] 15 754 head(citations) ## V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V17 V18 V19 V20 V21 V22 V23 V24 V25 V26 V27 V28 V29 V30 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V31 V32 V33 V34 V35 V36 V37 V38 V39 V40 V41 V42 V43 V44 ## 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 ## V45 V46 V47 V48 V49 V50 V51 V52 V53 V54 V55 V56 V57 V58 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V59 V60 V61 V62 V63 V64 V65 V66 V67 V68 V69 V70 V71 V72 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V73 V74 V75 V76 V77 V78 V79 V80 V81 V82 V83 V84 V85 V86 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V87 V88 V89 V90 V91 V92 V93 V94 V95 V96 V97 V98 V99 ## 1 0 0 0 0 0 0 0 0 0 0 0 0 0 ## V100 V101 V102 V103 V104 V105 V106 V107 V108 V109 V110 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V111 V112 V113 V114 V115 V116 V117 V118 V119 V120 V121 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V122 V123 V124 V125 V126 V127 V128 V129 V130 V131 V132 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V133 V134 V135 V136 V137 V138 V139 V140 V141 V142 V143 ## 1 0 0 1 1 1 0 1 7 3 0 0 ## V144 V145 V146 V147 V148 V149 V150 V151 V152 V153 V154 ## 1 2 2 3 0 2 3 0 3 0 3 3 ## V155 V156 V157 V158 V159 V160 V161 V162 V163 V164 V165 ## 1 8 0 0 3 2 6 0 0 0 4 1 ## V166 V167 V168 V169 V170 V171 V172 V173 V174 V175 V176 ## 1 0 1 0 0 1 1 0 0 1 0 1 ## V177 V178 V179 V180 V181 V182 V183 V184 V185 V186 V187 ## 1 2 0 0 1 0 1 0 0 1 4 0 ## V188 V189 V190 V191 V192 V193 V194 V195 V196 V197 V198 ## 1 1 0 0 1 2 0 0 1 2 0 2 ## V199 V200 V201 V202 V203 V204 V205 V206 V207 V208 V209 ## 1 0 0 1 1 0 0 2 1 0 3 0 ## V210 V211 V212 V213 V214 V215 V216 V217 V218 V219 V220 ## 1 1 1 0 0 3 0 2 3 0 0 2 ## V221 V222 V223 V224 V225 V226 V227 V228 V229 V230 V231 ## 1 0 0 1 0 0 1 0 0 1 0 1 ## V232 V233 V234 V235 V236 V237 V238 V239 V240 V241 V242 ## 1 1 0 1 1 0 1 0 1 1 0 1 ## V243 V244 V245 V246 V247 V248 V249 V250 V251 V252 V253 ## 1 1 0 0 0 0 1 0 1 1 0 0 ## V254 V255 V256 V257 V258 V259 V260 V261 V262 V263 V264 ## 1 0 0 1 0 1 0 0 0 1 0 1 ## V265 V266 V267 V268 V269 V270 V271 V272 V273 V274 V275 ## 1 0 0 0 0 1 1 0 0 0 0 1 ## V276 V277 V278 V279 V280 V281 V282 V283 V284 V285 V286 ## 1 1 0 1 0 0 0 1 0 2 0 1 ## V287 V288 V289 V290 V291 V292 V293 V294 V295 V296 V297 ## 1 0 1 0 2 1 1 1 0 1 0 1 ## V298 V299 V300 V301 V302 V303 V304 V305 V306 V307 V308 ## 1 0 0 0 1 1 1 0 1 0 0 1 ## V309 V310 V311 V312 V313 V314 V315 V316 V317 V318 V319 ## 1 0 1 0 1 0 0 0 0 0 0 0 ## V320 V321 V322 V323 V324 V325 V326 V327 V328 V329 V330 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V331 V332 V333 V334 V335 V336 V337 V338 V339 V340 V341 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V342 V343 V344 V345 V346 V347 V348 V349 V350 V351 V352 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V353 V354 V355 V356 V357 V358 V359 V360 V361 V362 V363 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V364 V365 V366 V367 V368 V369 V370 V371 V372 V373 V374 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V375 V376 V377 V378 V379 V380 V381 V382 V383 V384 V385 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V386 V387 V388 V389 V390 V391 V392 V393 V394 V395 V396 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V397 V398 V399 V400 V401 V402 V403 V404 V405 V406 V407 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V408 V409 V410 V411 V412 V413 V414 V415 V416 V417 V418 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V419 V420 V421 V422 V423 V424 V425 V426 V427 V428 V429 ## 1 0 5 0 0 0 0 0 0 0 5 0 ## V430 V431 V432 V433 V434 V435 V436 V437 V438 V439 V440 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V441 V442 V443 V444 V445 V446 V447 V448 V449 V450 V451 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V452 V453 V454 V455 V456 V457 V458 V459 V460 V461 V462 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V463 V464 V465 V466 V467 V468 V469 V470 V471 V472 V473 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V474 V475 V476 V477 V478 V479 V480 V481 V482 V483 V484 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V485 V486 V487 V488 V489 V490 V491 V492 V493 V494 V495 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V496 V497 V498 V499 V500 V501 V502 V503 V504 V505 V506 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V507 V508 V509 V510 V511 V512 V513 V514 V515 V516 V517 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V518 V519 V520 V521 V522 V523 V524 V525 V526 V527 V528 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V529 V530 V531 V532 V533 V534 V535 V536 V537 V538 V539 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V540 V541 V542 V543 V544 V545 V546 V547 V548 V549 V550 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V551 V552 V553 V554 V555 V556 V557 V558 V559 V560 V561 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V562 V563 V564 V565 V566 V567 V568 V569 V570 V571 V572 ## 1 3 0 0 0 0 0 0 0 0 0 0 ## V573 V574 V575 V576 V577 V578 V579 V580 V581 V582 V583 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V584 V585 V586 V587 V588 V589 V590 V591 V592 V593 V594 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V595 V596 V597 V598 V599 V600 V601 V602 V603 V604 V605 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V606 V607 V608 V609 V610 V611 V612 V613 V614 V615 V616 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V617 V618 V619 V620 V621 V622 V623 V624 V625 V626 V627 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V628 V629 V630 V631 V632 V633 V634 V635 V636 V637 V638 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V639 V640 V641 V642 V643 V644 V645 V646 V647 V648 V649 ## 1 0 0 0 0 0 0 0 1 0 0 0 ## V650 V651 V652 V653 V654 V655 V656 V657 V658 V659 V660 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V661 V662 V663 V664 V665 V666 V667 V668 V669 V670 V671 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V672 V673 V674 V675 V676 V677 V678 V679 V680 V681 V682 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V683 V684 V685 V686 V687 V688 V689 V690 V691 V692 V693 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V694 V695 V696 V697 V698 V699 V700 V701 V702 V703 V704 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V705 V706 V707 V708 V709 V710 V711 V712 V713 V714 V715 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V716 V717 V718 V719 V720 V721 V722 V723 V724 V725 V726 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V727 V728 V729 V730 V731 V732 V733 V734 V735 V736 V737 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V738 V739 V740 V741 V742 V743 V744 V745 V746 V747 V748 ## 1 0 0 0 0 0 0 0 0 0 0 0 ## V749 V750 V751 V752 V753 V754 ## 1 0 0 0 0 0 0 ## [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 5 rows ] citations[1:5,1:5] ## V1 V2 V3 V4 V5 ## 1 0 0 0 0 0 ## 2 0 0 0 0 0 ## 3 0 0 0 0 0 ## 4 0 0 0 0 0 ## 5 0 0 0 0 0 max(citations) ## [1] 14 #across all paers apply(citations, 1, max) ## [1] 8 7 14 5 5 8 6 8 11 5 3 5 11 3 4 names(titles) ## [1] &quot;auth_titles&quot; &quot;ref_titles&quot; Papers that he has written: head(titles[[&quot;auth_titles&quot;]],3) ## [[1]] ## [1] &quot;Value and choice as separable, stable representations in orbitofrontal cortex&quot; ## ## [[2]] ## [1] &quot;Calibrating deep convolutional gaussian processes&quot; ## ## [[3]] ## [1] &quot;Neural trajectories in the supplementary motor area and motor cortex exhibit distinct geometries, compatible with different classes of computation&quot; Papers he has cited head(titles[[&quot;ref_titles&quot;]],3) ## [[1]] ## [1] &quot;On improved estimation of normal precision matrix and discriminant coefficients&quot; ## ## [[2]] ## [1] &quot;Snakemake--a scalable bioinformatics workflow engine&quot; ## ## [[3]] ## [1] &quot;Bayesian source localization with the multivariate laplace prior&quot; Among the 15, there are four papers that reference the 2 most popular articles. Let us find them: ref_count &lt;- apply(citations, 2, function(x) sum(x &gt; 0)) targets &lt;- tail(names(sort(ref_count)),2) #These are the two columns we want target_ind &lt;- which(names(citations) %in% targets) target_ind ## [1] 186 428 titles[[&quot;ref_titles&quot;]][target_ind] ## [[1]] ## [1] &quot;A category-free neural population supports evolving demands during decision-making&quot; ## ## [[2]] ## [1] &quot;Reorganization between preparatory and movement population responses in motor cortex&quot; Explore this data: we know the index of the two. This can show the correlation between the two, meaning the papers are cited by certain papers. This would make sense. If you cite one of these, you almost certainly have to cite the other: citations[,target_ind] ## V186 V428 ## 1 4 5 ## 2 0 0 ## 3 1 1 ## 4 0 0 ## 5 0 0 ## 6 0 0 ## 7 0 0 ## 8 0 0 ## 9 3 1 ## 10 0 0 ## 11 0 0 ## 12 0 0 ## 13 0 0 ## 14 0 0 ## 15 2 1 We would intuitively jus apply our prcomp, like we learned in last class. pr_out &lt;- prcomp(citations) plot(pr_out$sdev, main=&quot;&quot;) This plot is not very appealing. There is not a significant drop until the last term. Maybe between 1 and 2 and 3 and 4, but not a big drop. And if you only abandon 1 dimension, (14 instead of 15), you arenâ€™t really saving a lot. pr_out &lt;- prcomp(citations) plot(pr_out$sdev, main=&quot;&quot;) png(&quot;Datasets/loadings.png&quot;, 900, 700) par(mfrow=c(4, 3)) for(i in seq_len(ncol(pr_out$rotation[,1:12]))){ eigenvec &lt;- pr_out$rotation[, i] plot(eigenvec) abline(h=0) } dev.off() ## png ## 2 titles[[&quot;ref_titles&quot;]][target_ind] ## [[1]] ## [1] &quot;A category-free neural population supports evolving demands during decision-making&quot; ## ## [[2]] ## [1] &quot;Reorganization between preparatory and movement population responses in motor cortex&quot; 1st column second row is 2nd column 3rd row is a disaster. "]]
